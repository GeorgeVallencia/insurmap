generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  UNDERWRITER
  BROKER
  INSURER
  CLAIMS
  REINSURER
}

model User {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Auth basics
  email         String   @unique
  username      String   @unique
  passwordHash  String

  // Profile
  fullName      String
  role          Role

  // Optional org fields
  organization  String?
  industry      String?   // for org signups, optional

  // Example: for underwriters etc.
  specialtyLine String?   // UNDERWRITER only
  yearsExp      Int?

  // Claims example
  avgClaimsPerMonth Int?

  // Reinsurer example
  reinsurerType  String? // "Treaty" | "Facultative"
  
  // Relations
  properties Property[]
}

model Property {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Property details
  address         String
  latitude        Float
  longitude       Float
  propertyType    String   // residential, commercial, industrial
  status          String   @default("active")
  estimatedValue  Float?
  notes           String?
  
  // Risk assessment
  riskScore       Float    @default(0)
  riskFactors     Json?    // Flexible JSON for different risk factors
  
  // Relations
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}
